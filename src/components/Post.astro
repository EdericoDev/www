---
interface Props {
  href: string;
  title: string;
  description: string;
  tags: string[];
  pubDate: string;
  readingTime: number;
}

const { title, description, href, tags, pubDate, readingTime } = Astro.props;

const formatDate = (dateString: string) => {
  const options: Intl.DateTimeFormatOptions = { 
    day: "numeric", 
    month: "short", 
    year: "numeric" 
  };
  return new Intl.DateTimeFormat("en-GB", options).format(new Date(dateString));
};
---

<article class="group flex w-full flex-col gap-2 rounded-lg border bg-zinc-50 px-4 py-4 dark:border-zinc-700 dark:bg-zinc-800">
  <a href={href} aria-label={`Read more about ${title}`} class="block">
    <div class="mb-3">
      <h2 class="text-lg font-bold text-zinc-800 group-hover:underline dark:text-zinc-100">
        {title}
      </h2>
    </div>
    
    <p class="mb-4 text-zinc-600 dark:text-zinc-300">{description}</p>
    
    <div class="flex flex-wrap items-center justify-between gap-2">
      <div class="flex flex-wrap gap-2" aria-label="Tags">
        {tags.map((tag) => (
          <span 
            class="rounded-full border bg-white px-2.5 py-1 text-xs font-medium text-zinc-700 dark:border-zinc-600 dark:bg-zinc-700 dark:text-zinc-200"
            aria-label={`Tag: ${tag}`}
          >
            {tag}
          </span>
        ))}
      </div>
      
      <div class="flex items-center gap-2 text-xs text-zinc-500 dark:text-zinc-400">
        <time datetime={new Date(pubDate).toISOString()}>
          {formatDate(pubDate)}
        </time>
        <span class="text-xs">â€¢</span>
        <span>{readingTime} min read</span>
      </div>
    </div>
  </a>
</article>